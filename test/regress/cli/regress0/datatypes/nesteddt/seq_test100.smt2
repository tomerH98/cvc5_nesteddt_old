; COMMAND-LINE: --nesteddt
; EXPECT: unsat
; DISABLE-TESTER: model
(set-logic ALL)
(set-option :dt-nested-rec true)
(declare-datatypes ((T 0)) (((nT) (cons (id Int) (s (Seq T)) ) ) ))
(declare-const x0 T)
(declare-const s0 (Seq T))
(declare-const x1 T)
(declare-const s1 (Seq T))
(declare-const x2 T)
(declare-const s2 (Seq T))
(declare-const x3 T)
(declare-const s3 (Seq T))
(declare-const x4 T)
(declare-const s4 (Seq T))
(declare-const x5 T)
(declare-const s5 (Seq T))
(declare-const x6 T)
(declare-const s6 (Seq T))
(declare-const x7 T)
(declare-const s7 (Seq T))
(declare-const x8 T)
(declare-const s8 (Seq T))
(declare-const x9 T)
(declare-const s9 (Seq T))
(declare-const x10 T)
(declare-const s10 (Seq T))
(declare-const x11 T)
(declare-const s11 (Seq T))
(declare-const x12 T)
(declare-const s12 (Seq T))
(declare-const x13 T)
(declare-const s13 (Seq T))
(declare-const x14 T)
(declare-const s14 (Seq T))
(declare-const x15 T)
(declare-const s15 (Seq T))
(declare-const x16 T)
(declare-const s16 (Seq T))
(declare-const x17 T)
(declare-const s17 (Seq T))
(declare-const x18 T)
(declare-const s18 (Seq T))
(declare-const x19 T)
(declare-const s19 (Seq T))
(declare-const x20 T)
(declare-const s20 (Seq T))
(declare-const x21 T)
(declare-const s21 (Seq T))
(declare-const x22 T)
(declare-const s22 (Seq T))
(declare-const x23 T)
(declare-const s23 (Seq T))
(declare-const x24 T)
(declare-const s24 (Seq T))
(declare-const x25 T)
(declare-const s25 (Seq T))
(declare-const x26 T)
(declare-const s26 (Seq T))
(declare-const x27 T)
(declare-const s27 (Seq T))
(declare-const x28 T)
(declare-const s28 (Seq T))
(declare-const x29 T)
(declare-const s29 (Seq T))
(declare-const x30 T)
(declare-const s30 (Seq T))
(declare-const x31 T)
(declare-const s31 (Seq T))
(declare-const x32 T)
(declare-const s32 (Seq T))
(declare-const x33 T)
(declare-const s33 (Seq T))
(declare-const x34 T)
(declare-const s34 (Seq T))
(declare-const x35 T)
(declare-const s35 (Seq T))
(declare-const x36 T)
(declare-const s36 (Seq T))
(declare-const x37 T)
(declare-const s37 (Seq T))
(declare-const x38 T)
(declare-const s38 (Seq T))
(declare-const x39 T)
(declare-const s39 (Seq T))
(declare-const x40 T)
(declare-const s40 (Seq T))
(declare-const x41 T)
(declare-const s41 (Seq T))
(declare-const x42 T)
(declare-const s42 (Seq T))
(declare-const x43 T)
(declare-const s43 (Seq T))
(declare-const x44 T)
(declare-const s44 (Seq T))
(declare-const x45 T)
(declare-const s45 (Seq T))
(declare-const x46 T)
(declare-const s46 (Seq T))
(declare-const x47 T)
(declare-const s47 (Seq T))
(declare-const x48 T)
(declare-const s48 (Seq T))
(declare-const x49 T)
(declare-const s49 (Seq T))
(declare-const x50 T)
(declare-const s50 (Seq T))
(declare-const x51 T)
(declare-const s51 (Seq T))
(declare-const x52 T)
(declare-const s52 (Seq T))
(declare-const x53 T)
(declare-const s53 (Seq T))
(declare-const x54 T)
(declare-const s54 (Seq T))
(declare-const x55 T)
(declare-const s55 (Seq T))
(declare-const x56 T)
(declare-const s56 (Seq T))
(declare-const x57 T)
(declare-const s57 (Seq T))
(declare-const x58 T)
(declare-const s58 (Seq T))
(declare-const x59 T)
(declare-const s59 (Seq T))
(declare-const x60 T)
(declare-const s60 (Seq T))
(declare-const x61 T)
(declare-const s61 (Seq T))
(declare-const x62 T)
(declare-const s62 (Seq T))
(declare-const x63 T)
(declare-const s63 (Seq T))
(declare-const x64 T)
(declare-const s64 (Seq T))
(declare-const x65 T)
(declare-const s65 (Seq T))
(declare-const x66 T)
(declare-const s66 (Seq T))
(declare-const x67 T)
(declare-const s67 (Seq T))
(declare-const x68 T)
(declare-const s68 (Seq T))
(declare-const x69 T)
(declare-const s69 (Seq T))
(declare-const x70 T)
(declare-const s70 (Seq T))
(declare-const x71 T)
(declare-const s71 (Seq T))
(declare-const x72 T)
(declare-const s72 (Seq T))
(declare-const x73 T)
(declare-const s73 (Seq T))
(declare-const x74 T)
(declare-const s74 (Seq T))
(declare-const x75 T)
(declare-const s75 (Seq T))
(declare-const x76 T)
(declare-const s76 (Seq T))
(declare-const x77 T)
(declare-const s77 (Seq T))
(declare-const x78 T)
(declare-const s78 (Seq T))
(declare-const x79 T)
(declare-const s79 (Seq T))
(declare-const x80 T)
(declare-const s80 (Seq T))
(declare-const x81 T)
(declare-const s81 (Seq T))
(declare-const x82 T)
(declare-const s82 (Seq T))
(declare-const x83 T)
(declare-const s83 (Seq T))
(declare-const x84 T)
(declare-const s84 (Seq T))
(declare-const x85 T)
(declare-const s85 (Seq T))
(declare-const x86 T)
(declare-const s86 (Seq T))
(declare-const x87 T)
(declare-const s87 (Seq T))
(declare-const x88 T)
(declare-const s88 (Seq T))
(declare-const x89 T)
(declare-const s89 (Seq T))
(declare-const x90 T)
(declare-const s90 (Seq T))
(declare-const x91 T)
(declare-const s91 (Seq T))
(declare-const x92 T)
(declare-const s92 (Seq T))
(declare-const x93 T)
(declare-const s93 (Seq T))
(declare-const x94 T)
(declare-const s94 (Seq T))
(declare-const x95 T)
(declare-const s95 (Seq T))
(declare-const x96 T)
(declare-const s96 (Seq T))
(declare-const x97 T)
(declare-const s97 (Seq T))
(declare-const x98 T)
(declare-const s98 (Seq T))
(declare-const x99 T)
(declare-const s99 (Seq T))
(assert (= s0 (s x0)))
(assert (= x1 (seq.nth s0 0)))
(assert (= s1 (s x1)))
(assert (= x2 (seq.nth s1 0)))
(assert (= s2 (s x2)))
(assert (= x3 (seq.nth s2 0)))
(assert (= s3 (s x3)))
(assert (= x4 (seq.nth s3 0)))
(assert (= s4 (s x4)))
(assert (= x5 (seq.nth s4 0)))
(assert (= s5 (s x5)))
(assert (= x6 (seq.nth s5 0)))
(assert (= s6 (s x6)))
(assert (= x7 (seq.nth s6 0)))
(assert (= s7 (s x7)))
(assert (= x8 (seq.nth s7 0)))
(assert (= s8 (s x8)))
(assert (= x9 (seq.nth s8 0)))
(assert (= s9 (s x9)))
(assert (= x10 (seq.nth s9 0)))
(assert (= s10 (s x10)))
(assert (= x11 (seq.nth s10 0)))
(assert (= s11 (s x11)))
(assert (= x12 (seq.nth s11 0)))
(assert (= s12 (s x12)))
(assert (= x13 (seq.nth s12 0)))
(assert (= s13 (s x13)))
(assert (= x14 (seq.nth s13 0)))
(assert (= s14 (s x14)))
(assert (= x15 (seq.nth s14 0)))
(assert (= s15 (s x15)))
(assert (= x16 (seq.nth s15 0)))
(assert (= s16 (s x16)))
(assert (= x17 (seq.nth s16 0)))
(assert (= s17 (s x17)))
(assert (= x18 (seq.nth s17 0)))
(assert (= s18 (s x18)))
(assert (= x19 (seq.nth s18 0)))
(assert (= s19 (s x19)))
(assert (= x20 (seq.nth s19 0)))
(assert (= s20 (s x20)))
(assert (= x21 (seq.nth s20 0)))
(assert (= s21 (s x21)))
(assert (= x22 (seq.nth s21 0)))
(assert (= s22 (s x22)))
(assert (= x23 (seq.nth s22 0)))
(assert (= s23 (s x23)))
(assert (= x24 (seq.nth s23 0)))
(assert (= s24 (s x24)))
(assert (= x25 (seq.nth s24 0)))
(assert (= s25 (s x25)))
(assert (= x26 (seq.nth s25 0)))
(assert (= s26 (s x26)))
(assert (= x27 (seq.nth s26 0)))
(assert (= s27 (s x27)))
(assert (= x28 (seq.nth s27 0)))
(assert (= s28 (s x28)))
(assert (= x29 (seq.nth s28 0)))
(assert (= s29 (s x29)))
(assert (= x30 (seq.nth s29 0)))
(assert (= s30 (s x30)))
(assert (= x31 (seq.nth s30 0)))
(assert (= s31 (s x31)))
(assert (= x32 (seq.nth s31 0)))
(assert (= s32 (s x32)))
(assert (= x33 (seq.nth s32 0)))
(assert (= s33 (s x33)))
(assert (= x34 (seq.nth s33 0)))
(assert (= s34 (s x34)))
(assert (= x35 (seq.nth s34 0)))
(assert (= s35 (s x35)))
(assert (= x36 (seq.nth s35 0)))
(assert (= s36 (s x36)))
(assert (= x37 (seq.nth s36 0)))
(assert (= s37 (s x37)))
(assert (= x38 (seq.nth s37 0)))
(assert (= s38 (s x38)))
(assert (= x39 (seq.nth s38 0)))
(assert (= s39 (s x39)))
(assert (= x40 (seq.nth s39 0)))
(assert (= s40 (s x40)))
(assert (= x41 (seq.nth s40 0)))
(assert (= s41 (s x41)))
(assert (= x42 (seq.nth s41 0)))
(assert (= s42 (s x42)))
(assert (= x43 (seq.nth s42 0)))
(assert (= s43 (s x43)))
(assert (= x44 (seq.nth s43 0)))
(assert (= s44 (s x44)))
(assert (= x45 (seq.nth s44 0)))
(assert (= s45 (s x45)))
(assert (= x46 (seq.nth s45 0)))
(assert (= s46 (s x46)))
(assert (= x47 (seq.nth s46 0)))
(assert (= s47 (s x47)))
(assert (= x48 (seq.nth s47 0)))
(assert (= s48 (s x48)))
(assert (= x49 (seq.nth s48 0)))
(assert (= s49 (s x49)))
(assert (= x50 (seq.nth s49 0)))
(assert (= s50 (s x50)))
(assert (= x51 (seq.nth s50 0)))
(assert (= s51 (s x51)))
(assert (= x52 (seq.nth s51 0)))
(assert (= s52 (s x52)))
(assert (= x53 (seq.nth s52 0)))
(assert (= s53 (s x53)))
(assert (= x54 (seq.nth s53 0)))
(assert (= s54 (s x54)))
(assert (= x55 (seq.nth s54 0)))
(assert (= s55 (s x55)))
(assert (= x56 (seq.nth s55 0)))
(assert (= s56 (s x56)))
(assert (= x57 (seq.nth s56 0)))
(assert (= s57 (s x57)))
(assert (= x58 (seq.nth s57 0)))
(assert (= s58 (s x58)))
(assert (= x59 (seq.nth s58 0)))
(assert (= s59 (s x59)))
(assert (= x60 (seq.nth s59 0)))
(assert (= s60 (s x60)))
(assert (= x61 (seq.nth s60 0)))
(assert (= s61 (s x61)))
(assert (= x62 (seq.nth s61 0)))
(assert (= s62 (s x62)))
(assert (= x63 (seq.nth s62 0)))
(assert (= s63 (s x63)))
(assert (= x64 (seq.nth s63 0)))
(assert (= s64 (s x64)))
(assert (= x65 (seq.nth s64 0)))
(assert (= s65 (s x65)))
(assert (= x66 (seq.nth s65 0)))
(assert (= s66 (s x66)))
(assert (= x67 (seq.nth s66 0)))
(assert (= s67 (s x67)))
(assert (= x68 (seq.nth s67 0)))
(assert (= s68 (s x68)))
(assert (= x69 (seq.nth s68 0)))
(assert (= s69 (s x69)))
(assert (= x70 (seq.nth s69 0)))
(assert (= s70 (s x70)))
(assert (= x71 (seq.nth s70 0)))
(assert (= s71 (s x71)))
(assert (= x72 (seq.nth s71 0)))
(assert (= s72 (s x72)))
(assert (= x73 (seq.nth s72 0)))
(assert (= s73 (s x73)))
(assert (= x74 (seq.nth s73 0)))
(assert (= s74 (s x74)))
(assert (= x75 (seq.nth s74 0)))
(assert (= s75 (s x75)))
(assert (= x76 (seq.nth s75 0)))
(assert (= s76 (s x76)))
(assert (= x77 (seq.nth s76 0)))
(assert (= s77 (s x77)))
(assert (= x78 (seq.nth s77 0)))
(assert (= s78 (s x78)))
(assert (= x79 (seq.nth s78 0)))
(assert (= s79 (s x79)))
(assert (= x80 (seq.nth s79 0)))
(assert (= s80 (s x80)))
(assert (= x81 (seq.nth s80 0)))
(assert (= s81 (s x81)))
(assert (= x82 (seq.nth s81 0)))
(assert (= s82 (s x82)))
(assert (= x83 (seq.nth s82 0)))
(assert (= s83 (s x83)))
(assert (= x84 (seq.nth s83 0)))
(assert (= s84 (s x84)))
(assert (= x85 (seq.nth s84 0)))
(assert (= s85 (s x85)))
(assert (= x86 (seq.nth s85 0)))
(assert (= s86 (s x86)))
(assert (= x87 (seq.nth s86 0)))
(assert (= s87 (s x87)))
(assert (= x88 (seq.nth s87 0)))
(assert (= s88 (s x88)))
(assert (= x89 (seq.nth s88 0)))
(assert (= s89 (s x89)))
(assert (= x90 (seq.nth s89 0)))
(assert (= s90 (s x90)))
(assert (= x91 (seq.nth s90 0)))
(assert (= s91 (s x91)))
(assert (= x92 (seq.nth s91 0)))
(assert (= s92 (s x92)))
(assert (= x93 (seq.nth s92 0)))
(assert (= s93 (s x93)))
(assert (= x94 (seq.nth s93 0)))
(assert (= s94 (s x94)))
(assert (= x95 (seq.nth s94 0)))
(assert (= s95 (s x95)))
(assert (= x96 (seq.nth s95 0)))
(assert (= s96 (s x96)))
(assert (= x97 (seq.nth s96 0)))
(assert (= s97 (s x97)))
(assert (= x98 (seq.nth s97 0)))
(assert (= s98 (s x98)))
(assert (= x99 (seq.nth s98 0)))
(assert (= s99 (s x99)))
(assert (= x0 (seq.nth s99 0)))
(assert (not (= x0 nT)))
(assert (not (= x1 nT)))
(assert (not (= x2 nT)))
(assert (not (= x3 nT)))
(assert (not (= x4 nT)))
(assert (not (= x5 nT)))
(assert (not (= x6 nT)))
(assert (not (= x7 nT)))
(assert (not (= x8 nT)))
(assert (not (= x9 nT)))
(assert (not (= x10 nT)))
(assert (not (= x11 nT)))
(assert (not (= x12 nT)))
(assert (not (= x13 nT)))
(assert (not (= x14 nT)))
(assert (not (= x15 nT)))
(assert (not (= x16 nT)))
(assert (not (= x17 nT)))
(assert (not (= x18 nT)))
(assert (not (= x19 nT)))
(assert (not (= x20 nT)))
(assert (not (= x21 nT)))
(assert (not (= x22 nT)))
(assert (not (= x23 nT)))
(assert (not (= x24 nT)))
(assert (not (= x25 nT)))
(assert (not (= x26 nT)))
(assert (not (= x27 nT)))
(assert (not (= x28 nT)))
(assert (not (= x29 nT)))
(assert (not (= x30 nT)))
(assert (not (= x31 nT)))
(assert (not (= x32 nT)))
(assert (not (= x33 nT)))
(assert (not (= x34 nT)))
(assert (not (= x35 nT)))
(assert (not (= x36 nT)))
(assert (not (= x37 nT)))
(assert (not (= x38 nT)))
(assert (not (= x39 nT)))
(assert (not (= x40 nT)))
(assert (not (= x41 nT)))
(assert (not (= x42 nT)))
(assert (not (= x43 nT)))
(assert (not (= x44 nT)))
(assert (not (= x45 nT)))
(assert (not (= x46 nT)))
(assert (not (= x47 nT)))
(assert (not (= x48 nT)))
(assert (not (= x49 nT)))
(assert (not (= x50 nT)))
(assert (not (= x51 nT)))
(assert (not (= x52 nT)))
(assert (not (= x53 nT)))
(assert (not (= x54 nT)))
(assert (not (= x55 nT)))
(assert (not (= x56 nT)))
(assert (not (= x57 nT)))
(assert (not (= x58 nT)))
(assert (not (= x59 nT)))
(assert (not (= x60 nT)))
(assert (not (= x61 nT)))
(assert (not (= x62 nT)))
(assert (not (= x63 nT)))
(assert (not (= x64 nT)))
(assert (not (= x65 nT)))
(assert (not (= x66 nT)))
(assert (not (= x67 nT)))
(assert (not (= x68 nT)))
(assert (not (= x69 nT)))
(assert (not (= x70 nT)))
(assert (not (= x71 nT)))
(assert (not (= x72 nT)))
(assert (not (= x73 nT)))
(assert (not (= x74 nT)))
(assert (not (= x75 nT)))
(assert (not (= x76 nT)))
(assert (not (= x77 nT)))
(assert (not (= x78 nT)))
(assert (not (= x79 nT)))
(assert (not (= x80 nT)))
(assert (not (= x81 nT)))
(assert (not (= x82 nT)))
(assert (not (= x83 nT)))
(assert (not (= x84 nT)))
(assert (not (= x85 nT)))
(assert (not (= x86 nT)))
(assert (not (= x87 nT)))
(assert (not (= x88 nT)))
(assert (not (= x89 nT)))
(assert (not (= x90 nT)))
(assert (not (= x91 nT)))
(assert (not (= x92 nT)))
(assert (not (= x93 nT)))
(assert (not (= x94 nT)))
(assert (not (= x95 nT)))
(assert (not (= x96 nT)))
(assert (not (= x97 nT)))
(assert (not (= x98 nT)))
(assert (not (= x99 nT)))
(check-sat)
