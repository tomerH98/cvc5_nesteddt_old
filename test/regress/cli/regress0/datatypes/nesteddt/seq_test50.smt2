; COMMAND-LINE: --nesteddt  --dt-blast-splits
; EXPECT: unsat
; DISABLE-TESTER: model
(set-logic ALL)
(set-option :dt-nested-rec true)
(declare-datatypes ((T 0)) (((nT) (cons (id Int) (s (Seq T)) ) ) ))
(declare-const x0 T)
(declare-const s0 (Seq T))
(declare-const x1 T)
(declare-const s1 (Seq T))
(declare-const x2 T)
(declare-const s2 (Seq T))
(declare-const x3 T)
(declare-const s3 (Seq T))
(declare-const x4 T)
(declare-const s4 (Seq T))
(declare-const x5 T)
(declare-const s5 (Seq T))
(declare-const x6 T)
(declare-const s6 (Seq T))
(declare-const x7 T)
(declare-const s7 (Seq T))
(declare-const x8 T)
(declare-const s8 (Seq T))
(declare-const x9 T)
(declare-const s9 (Seq T))
(declare-const x10 T)
(declare-const s10 (Seq T))
(declare-const x11 T)
(declare-const s11 (Seq T))
(declare-const x12 T)
(declare-const s12 (Seq T))
(declare-const x13 T)
(declare-const s13 (Seq T))
(declare-const x14 T)
(declare-const s14 (Seq T))
(declare-const x15 T)
(declare-const s15 (Seq T))
(declare-const x16 T)
(declare-const s16 (Seq T))
(declare-const x17 T)
(declare-const s17 (Seq T))
(declare-const x18 T)
(declare-const s18 (Seq T))
(declare-const x19 T)
(declare-const s19 (Seq T))
(declare-const x20 T)
(declare-const s20 (Seq T))
(declare-const x21 T)
(declare-const s21 (Seq T))
(declare-const x22 T)
(declare-const s22 (Seq T))
(declare-const x23 T)
(declare-const s23 (Seq T))
(declare-const x24 T)
(declare-const s24 (Seq T))
(declare-const x25 T)
(declare-const s25 (Seq T))
(declare-const x26 T)
(declare-const s26 (Seq T))
(declare-const x27 T)
(declare-const s27 (Seq T))
(declare-const x28 T)
(declare-const s28 (Seq T))
(declare-const x29 T)
(declare-const s29 (Seq T))
(declare-const x30 T)
(declare-const s30 (Seq T))
(declare-const x31 T)
(declare-const s31 (Seq T))
(declare-const x32 T)
(declare-const s32 (Seq T))
(declare-const x33 T)
(declare-const s33 (Seq T))
(declare-const x34 T)
(declare-const s34 (Seq T))
(declare-const x35 T)
(declare-const s35 (Seq T))
(declare-const x36 T)
(declare-const s36 (Seq T))
(declare-const x37 T)
(declare-const s37 (Seq T))
(declare-const x38 T)
(declare-const s38 (Seq T))
(declare-const x39 T)
(declare-const s39 (Seq T))
(declare-const x40 T)
(declare-const s40 (Seq T))
(declare-const x41 T)
(declare-const s41 (Seq T))
(declare-const x42 T)
(declare-const s42 (Seq T))
(declare-const x43 T)
(declare-const s43 (Seq T))
(declare-const x44 T)
(declare-const s44 (Seq T))
(declare-const x45 T)
(declare-const s45 (Seq T))
(declare-const x46 T)
(declare-const s46 (Seq T))
(declare-const x47 T)
(declare-const s47 (Seq T))
(declare-const x48 T)
(declare-const s48 (Seq T))
(declare-const x49 T)
(declare-const s49 (Seq T))
(declare-const x50 T)
(declare-const s50 (Seq T))
(assert (= s0 (s x0)))
(assert (= x1 (seq.nth s0 0)))
(assert (= s1 (s x1)))
(assert (= x2 (seq.nth s1 0)))
(assert (= s2 (s x2)))
(assert (= x3 (seq.nth s2 0)))
(assert (= s3 (s x3)))
(assert (= x4 (seq.nth s3 0)))
(assert (= s4 (s x4)))
(assert (= x5 (seq.nth s4 0)))
(assert (= s5 (s x5)))
(assert (= x6 (seq.nth s5 0)))
(assert (= s6 (s x6)))
(assert (= x7 (seq.nth s6 0)))
(assert (= s7 (s x7)))
(assert (= x8 (seq.nth s7 0)))
(assert (= s8 (s x8)))
(assert (= x9 (seq.nth s8 0)))
(assert (= s9 (s x9)))
(assert (= x10 (seq.nth s9 0)))
(assert (= s10 (s x10)))
(assert (= x11 (seq.nth s10 0)))
(assert (= s11 (s x11)))
(assert (= x12 (seq.nth s11 0)))
(assert (= s12 (s x12)))
(assert (= x13 (seq.nth s12 0)))
(assert (= s13 (s x13)))
(assert (= x14 (seq.nth s13 0)))
(assert (= s14 (s x14)))
(assert (= x15 (seq.nth s14 0)))
(assert (= s15 (s x15)))
(assert (= x16 (seq.nth s15 0)))
(assert (= s16 (s x16)))
(assert (= x17 (seq.nth s16 0)))
(assert (= s17 (s x17)))
(assert (= x18 (seq.nth s17 0)))
(assert (= s18 (s x18)))
(assert (= x19 (seq.nth s18 0)))
(assert (= s19 (s x19)))
(assert (= x20 (seq.nth s19 0)))
(assert (= s20 (s x20)))
(assert (= x21 (seq.nth s20 0)))
(assert (= s21 (s x21)))
(assert (= x22 (seq.nth s21 0)))
(assert (= s22 (s x22)))
(assert (= x23 (seq.nth s22 0)))
(assert (= s23 (s x23)))
(assert (= x24 (seq.nth s23 0)))
(assert (= s24 (s x24)))
(assert (= x25 (seq.nth s24 0)))
(assert (= s25 (s x25)))
(assert (= x26 (seq.nth s25 0)))
(assert (= s26 (s x26)))
(assert (= x27 (seq.nth s26 0)))
(assert (= s27 (s x27)))
(assert (= x28 (seq.nth s27 0)))
(assert (= s28 (s x28)))
(assert (= x29 (seq.nth s28 0)))
(assert (= s29 (s x29)))
(assert (= x30 (seq.nth s29 0)))
(assert (= s30 (s x30)))
(assert (= x31 (seq.nth s30 0)))
(assert (= s31 (s x31)))
(assert (= x32 (seq.nth s31 0)))
(assert (= s32 (s x32)))
(assert (= x33 (seq.nth s32 0)))
(assert (= s33 (s x33)))
(assert (= x34 (seq.nth s33 0)))
(assert (= s34 (s x34)))
(assert (= x35 (seq.nth s34 0)))
(assert (= s35 (s x35)))
(assert (= x36 (seq.nth s35 0)))
(assert (= s36 (s x36)))
(assert (= x37 (seq.nth s36 0)))
(assert (= s37 (s x37)))
(assert (= x38 (seq.nth s37 0)))
(assert (= s38 (s x38)))
(assert (= x39 (seq.nth s38 0)))
(assert (= s39 (s x39)))
(assert (= x40 (seq.nth s39 0)))
(assert (= s40 (s x40)))
(assert (= x41 (seq.nth s40 0)))
(assert (= s41 (s x41)))
(assert (= x42 (seq.nth s41 0)))
(assert (= s42 (s x42)))
(assert (= x43 (seq.nth s42 0)))
(assert (= s43 (s x43)))
(assert (= x44 (seq.nth s43 0)))
(assert (= s44 (s x44)))
(assert (= x45 (seq.nth s44 0)))
(assert (= s45 (s x45)))
(assert (= x46 (seq.nth s45 0)))
(assert (= s46 (s x46)))
(assert (= x47 (seq.nth s46 0)))
(assert (= s47 (s x47)))
(assert (= x48 (seq.nth s47 0)))
(assert (= s48 (s x48)))
(assert (= x49 (seq.nth s48 0)))
(assert (= s49 (s x49)))
(assert (= x50 (seq.nth s49 0)))
(assert (= s50 (s x50)))
(assert (= x0 (seq.nth s50 0)))
(assert (not (= x0 nT)))
(assert (not (= x1 nT)))
(assert (not (= x2 nT)))
(assert (not (= x3 nT)))
(assert (not (= x4 nT)))
(assert (not (= x5 nT)))
(assert (not (= x6 nT)))
(assert (not (= x7 nT)))
(assert (not (= x8 nT)))
(assert (not (= x9 nT)))
(assert (not (= x10 nT)))
(assert (not (= x11 nT)))
(assert (not (= x12 nT)))
(assert (not (= x13 nT)))
(assert (not (= x14 nT)))
(assert (not (= x15 nT)))
(assert (not (= x16 nT)))
(assert (not (= x17 nT)))
(assert (not (= x18 nT)))
(assert (not (= x19 nT)))
(assert (not (= x20 nT)))
(assert (not (= x21 nT)))
(assert (not (= x22 nT)))
(assert (not (= x23 nT)))
(assert (not (= x24 nT)))
(assert (not (= x25 nT)))
(assert (not (= x26 nT)))
(assert (not (= x27 nT)))
(assert (not (= x28 nT)))
(assert (not (= x29 nT)))
(assert (not (= x30 nT)))
(assert (not (= x31 nT)))
(assert (not (= x32 nT)))
(assert (not (= x33 nT)))
(assert (not (= x34 nT)))
(assert (not (= x35 nT)))
(assert (not (= x36 nT)))
(assert (not (= x37 nT)))
(assert (not (= x38 nT)))
(assert (not (= x39 nT)))
(assert (not (= x40 nT)))
(assert (not (= x41 nT)))
(assert (not (= x42 nT)))
(assert (not (= x43 nT)))
(assert (not (= x44 nT)))
(assert (not (= x45 nT)))
(assert (not (= x46 nT)))
(assert (not (= x47 nT)))
(assert (not (= x48 nT)))
(assert (not (= x49 nT)))
(assert (not (= x50 nT)))
(check-sat)
