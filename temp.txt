

(assert (= x_rc_2 (select (|_nested_datatype_prefix_Array_[Int_T]_rc__0_3| (arr_rc x_rc_2)) 0)))
(assert (not (= x_rc_2 nT_rc)))

(lemma (let ((_let_1 (|_nested_datatype_prefix_Array_[Int_T]_rc__0_3| (arr_rc x_rc_2)))) (= (select _let_1 0) (car (nested_datatype_prefix_reverse_5 _let_1)))) :source NONE)
(lemma (let ((_let_1 (arr_rc x_rc_2))) (= _let_1 (nested_datatype_prefix_reverse_5 (|_nested_datatype_prefix_Array_[Int_T]_rc__0_3| _let_1)))) :source NONE)
(lemma (let ((_let_1 (arr_rc x_rc_2))) (or (= _let_1 nil_Int_T) ((_ is cons) _let_1))) :source DATATYPES_SPLIT)
(lemma (let ((_let_1 (select (|_nested_datatype_prefix_Array_[Int_T]_rc__0_3| (arr_rc x_rc_2)) 0))) (or (= _let_1 nT_rc) ((_ is cons_rc) _let_1))) :source DATATYPES_SPLIT)
